# Generated by Django 5.2.5 on 2025-08-30 21:56

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='StudentAdmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desired_class', models.CharField(choices=[('class 6', 'class 6'), ('class 9', 'class 9'), ('other', 'Other')], max_length=100, verbose_name='Desired Class for Admission')),
                ('student_name_english', models.CharField(max_length=255, verbose_name="Student's Name (English)")),
                ('student_name_bangla', models.CharField(blank=True, max_length=255, null=True, verbose_name="Student's Name (Bangla)")),
                ('birth_registration_number', models.CharField(max_length=100, unique=True, verbose_name='Birth Registration Number')),
                ('date_of_birth', models.DateField(verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, verbose_name='Gender')),
                ('religion', models.CharField(choices=[('islam', 'Islam'), ('hindu', 'Hindu'), ('buddhist', 'Buddhist'), ('christian', 'Christian'), ('other', 'Other'), ('not_specified', 'Not Specified')], max_length=50, verbose_name='Religion')),
                ('profile_picture', models.ImageField(help_text='Upload a profile photo (JPG or PNG, Max 1MB)', upload_to='student_profile_pictures/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])], verbose_name='Profile Picture (300x300)')),
                ('admission_date', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('father_name_en', models.CharField(blank=True, max_length=255, null=True)),
                ('father_name_bn', models.CharField(blank=True, max_length=255, null=True)),
                ('father_nid_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('father_is_deceased', models.BooleanField(default=False)),
                ('mother_name_en', models.CharField(blank=True, max_length=255, null=True)),
                ('mother_name_bn', models.CharField(blank=True, max_length=255, null=True)),
                ('mother_nid_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('mother_is_deceased', models.BooleanField(default=False)),
                ('mobile_number', models.CharField(max_length=20)),
                ('whatsapp_available', models.BooleanField(default=False)),
                ('guardian_profession', models.CharField(blank=True, max_length=255, null=True)),
                ('family_annual_income', models.CharField(blank=True, max_length=100, null=True)),
                ('present_address_village', models.CharField(blank=True, max_length=255, null=True)),
                ('present_address_post_office', models.CharField(blank=True, max_length=255, null=True)),
                ('present_address_sub_district', models.CharField(blank=True, max_length=255, null=True)),
                ('present_address_district', models.CharField(blank=True, max_length=255, null=True)),
                ('is_permanent_same_as_present', models.BooleanField(default=False)),
                ('permanent_address_village', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_address_post_office', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_address_sub_district', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_address_district', models.CharField(blank=True, max_length=255, null=True)),
                ('school_name', models.CharField(max_length=255)),
                ('School_address', models.CharField(max_length=255)),
                ('passing_class', models.CharField(max_length=50)),
                ('roll', models.IntegerField()),
                ('gpa', models.FloatField()),
                ('passing_year', models.IntegerField()),
                ('sibling_id_number', models.CharField(max_length=255)),
                ('special_skills', models.CharField(blank=True, choices=[('Cricket', 'Cricket'), ('Football', 'Football'), ('Dance', 'Dance'), ('Singing', 'Singing'), ('Ham/Naat', 'Ham/Naat'), ('Qirat', 'Qirat'), ('Chess', 'Chess'), ('Badminton', 'Badminton'), ('Shot Put', 'Shot Put'), ('Swimming', 'Swimming')], max_length=255, null=True)),
                ('additional_comments', models.TextField(blank=True, null=True)),
                ('agreed_to_terms', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Student Admission Form',
                'verbose_name_plural': 'Student Admission Forms',
                'ordering': ['-admission_date'],
            },
        ),
    ]
